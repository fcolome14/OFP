# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Operational Flight Plan Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "dev0", "dev1" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        ports:
          - 3306:3306
        options: >
          --default-authentication-plugin=mysql_native_password

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Grant privileges to a specific MySQL user if needed
    - name: Configure MySQL user
      run: |
        docker exec -i $(docker ps -qf "ancestor=mysql:5.7") \
        mysql -uroot -p"${{ secrets.DB_ROOT_PASSWORD }}" \
        -e "GRANT ALL PRIVILEGES ON ${MYSQL_DATABASE}.* TO 'runner'@'%' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}'; FLUSH PRIVILEGES;"

    - name: Run python tests
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        MYSQL_USER: runner
        MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        pytest
