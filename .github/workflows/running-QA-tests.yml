# This workflow will install Python dependencies, run tests and lint with a single version of Python
name: Operational Flight Plan Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "dev0", "dev1" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_USER: runner
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_INITDB_SKIP_TZINFO: 'yes'
          MYSQL_TCP_PORT: '3306'
          MYSQL_AUTHENTICATION_PLUGIN: 'mysql_native_password'
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Configure MySQL user
      run: |
        docker exec -i $(docker ps -qf "ancestor=mysql:5.7") \
        mysql -uroot -p"${{ secrets.DB_ROOT_PASSWORD }}" \
        -e "GRANT ALL PRIVILEGES ON ${MYSQL_DATABASE}.* TO 'root'@'%' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}'; FLUSH PRIVILEGES;"

    - name: Run python tests
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        MYSQL_USER: runner
        MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        pytest
